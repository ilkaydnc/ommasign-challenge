import {
  createParticles,
  getRandomMultipleOf10,
  generateLocation,
} from "./particles.js";

const plateDurations = {
  starting: 2000,
  start: 5000,
  ending: 1000,
};

const appDurations = {
  starting: 2000,
  start: 5000,
  ending: 1000,
};

const infoDurations = {
  starting: 1500,
  start: 300,
  ending: 5000,
};

createParticles(50);

setTimeout(() => {
  const particles = document.querySelectorAll(".particle");

  particles.forEach((item) => {
    const styles = {
      width: getRandomMultipleOf10(15, 6) + "px",
      top: generateLocation().y + "px",
      left: generateLocation().x + "px",
    };

    Object.assign(item.style, styles);

    setTimeout(() => {
      const styles = {
        top: generateLocation([900, 400], [950, 450]).y + "px",
        left: generateLocation([900, 400], [950, 450]).x + "px",
        transition: `all ${1000}ms`,
      };
      Object.assign(item.style, styles);
    }, 7000);
  });
}, 10);

/**
 *
 * @param {string} name Class names will be generated by `name`. For example name-starting, name-start, name-ending, and name-end.
 * @param {string} id Class names will be added by `id`.
 * @param { {
  starting: number,
  start: number,
  ending: number,
}} durations
 * @param {*} delay
 */
const animate = (name, id, durations, delay = 0) => {
  if (!durations) return null;
  const { starting, start, ending } = durations;
  const item = document.querySelector(`#${id}`);

  setTimeout(() => {
    item.classList.add([`${name}-starting`]);
    item.style.transition = `all ${starting}ms`;

    setTimeout(() => {
      item.style.transition = `all ${start}ms linear`;
      item.classList.remove([`${name}-starting`]);
      item.classList.add([`${name}-start`]);

      setTimeout(() => {
        item.style.transition = `all ${ending}ms`;
        item.classList.add([`${name}-ending`]);
        item.classList.remove([`${name}-start`]);

        setTimeout(() => {
          item.classList.remove([`${name}-ending`]);
          item.style.transition = "";
        }, ending);
      }, start);
    }, starting);
  }, delay);
};

animate("plate", "plate", plateDurations);
animate("app", "app", appDurations);
animate("info", "info", infoDurations);
